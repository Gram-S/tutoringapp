"""
Django settings for tutoringapp project.
Generated by 'django-admin startproject' using Django 5.2.7.
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Core ---
SECRET_KEY = "django-insecure-i^-z9f-@-_n!_7was$%t(d8dq-wa!k=tpq#83#0@0q^t-$iq!8"  # dev only
DEBUG = True
ALLOWED_HOSTS: list[str] = []  # add 'localhost', '127.0.0.1' when needed

# --- Apps ---
INSTALLED_APPS = [
    # Django
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Project apps
    "pages",

    # UI
    "crispy_forms",
    "crispy_bootstrap5",
]

# Crispy Forms (Bootstrap 5)
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# --- Middleware ---
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "tutoringapp.urls"

# --- Templates ---
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # We’re using app templates (pages/templates), so DIRS can stay empty.
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                # Keep debug so Django’s error pages work in DEBUG
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "tutoringapp.wsgi.application"

# --- Database ---
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# --- Password validation ---
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# --- I18N / TZ ---
LANGUAGE_CODE = "en-us"
TIME_ZONE = "America/Denver"  # MT local time
USE_I18N = True
USE_TZ = True

# --- Static files ---
STATIC_URL = "static/"
# So you can keep /static next to manage.py for custom CSS/JS (e.g., static/css/style.css)
STATICFILES_DIRS = [BASE_DIR / "static"]
# Optional: where collectstatic will gather files for deployment
STATIC_ROOT = BASE_DIR / "staticfiles"

# --- Auth redirects (nice UX for login/signup flows) ---
LOGIN_URL = "/login/"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

# --- Defaults ---
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"